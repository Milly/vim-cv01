" vim: filetype=vim.hltmpl
" File: src/templates/main.vim
" Description: Colorscheme file template for vim
" Author: Milly
" License: MIT
" --------------------------------------------------------------------------

if !exists('l:gen_colorscheme_template')
  throw 'Not sourced from src/gen.vim'
endif

File 'colors/${gen_base_name}.vim'

" Header ---{{{1
A " **DO NOT EDIT** This file is automatically generated.
A " File: ${gen_file_name}
A " Description: ${gen_desc_name}
A " Author: ${gen_author}
A " License: ${gen_license}
A " --------------------------------------------------------------------------
A
A " Init ---{{{1
A
A let s:true_colors = has('gui_running') || has('termguicolors') && &termguicolors
A
A if !s:true_colors && &t_Co < 256
A | echohl WarningMsg | echom 'colorscheme ${gen_base_name} requires GUI or 256-colors terminal.' | echohl None
A | finish
A endif
A
A if &background isnot# 'dark'
A | set background=dark
A endif
A if exists('g:colors_name')
A | highlight clear
A endif
A if exists('g:syntax_on')
A | syntax reset
A endif
A
A let g:colors_name = '${gen_base_name}'
A
A let s:has_ctermul = has('patch-8.2.0863')
A
A let s:transparent = get(g:, 'cv01_transparent', 0)
A let s:transparent_background = get(g:, 'cv01_transparent_background', s:transparent)
A let s:transparent_statusline = get(g:, 'cv01_transparent_statusline', s:transparent)
A let s:transparent_tabline = get(g:, 'cv01_transparent_tabline', s:transparent)
A
A let s:underline_cursorline = get(g:, 'cv01_underline_cursorline', has('gui'))
A
A let s:italic = get(g:, 'cv01_italic', 0)
A let s:italic_preproc = get(g:, 'cv01_italic_preproc', s:italic)
A let s:italic_comment = get(g:, 'cv01_italic_comment', s:italic)
A
A let s:highlight_terminal = get(g:, 'cv01_highlight_terminal', 0)
A
A " Vanilla Colors ---{{{1
A " General: {{{2
A
A if s:transparent_background && !has('gui')
Hi 'Normal'             FG(n4) bgNone
A else
Hi 'Normal'             FG(n4) BG(n0)
A endif
A
Hi 'Conceal'            FG(b2) bgNone
Hi 'Directory'          FG(y4)
Hi 'NonText'            FG(n2) sNone
Hi 'SpecialKey'         FG(y2) sNone
A
A " Cursor/Gutter: {{{2
A
A if s:underline_cursorline
Hi 'CursorLine'         bgNone sUnderline
Hi 'CursorLineNr'       FG(r4) bgNone Style('bold,underline')
A else
Hi 'CursorLine'         BG(n1) sNone
Hi 'CursorLineNr'       FG(r4) BG(n1) sBold
A endif
A
Hi 'Cursor'             FG(n2) BG(g5)
Hi 'lCursor'            FG(n2) BG(y5)
Hi 'CursorIM'           FG(n2) BG(r5)
Hi 'CursorColumn'       BG(n1)
Hi 'LineNr'             FG(g3) bgNone
Hi 'ColorColumn'        BG(n1) sNone
Hi 'FoldColumn'         FG(g3) bgNone
Hi 'SignColumn'         FG(g5) bgNone sNone
A
A " Window/Tab Line: {{{2
A
A if s:transparent_tabline
Hi 'TabLineFill'        bgNone sNone
A else
Hi 'TabLineFill'        BG(n1) sNone
A endif
A
Hi 'TabLine'            FG(n3) BG(g2) sNone
Hi 'TabLineSel'         FG(n5) BG(g3) sBold
Hi 'VertSplit'          FG(r4) bgNone sNone
A
A " Status Line: {{{2
A
A if s:transparent_statusline
Hi 'StatusLineNC'       FG(n3) bgNone sNone
Hi 'StatusLineTermNC'   FG(y3) bgNone sNone
A else
Hi 'StatusLineNC'       FG(n3) BG(g2) sNone
Hi 'StatusLineTermNC'   FG(n3) BG(y2) sNone
A endif
A
Hi 'StatusLine'         FG(n5) BG(g3) sNone
Hi 'StatusLineTerm'     FG(n5) BG(y3) sNone
Hi 'WildMenu'           FG(r5) BG(n2)
A
A " Prompt: {{{2
A
Hi 'ModeMsg'            FG(y3) bgNone sBold
Hi 'MoreMsg'            FG(y3) bgNone sBold
Hi 'Question'           FG(y4) bgNone sBold
Hi 'Title'              FG(g4) bgNone sBold
A hi! link ErrorMsg cv01Error
A hi! link WarningMsg cv01Warning
A
A " Search/Visual Range: {{{2
A
A if s:transparent_background
Hi 'Folded'             FG(g3) bgNone
A else
Hi 'Folded'             FG(g3) BG(n1)
A endif
A
Hi 'MatchParen'         FG(b3) BG(n4) sReverse
Hi 'Search'             FG(n5) BG(y3) sNone
Hi 'IncSearch'          FG(n5) BG(g3) sNone
Hi 'Visual'             BG(r2) sNone
Hi 'VisualNOS'          FG(n4) BG(n2) sNone
Hi 'QuickFixLine'       FG(n5) BG(g3)
A
A " Completion Menu: {{{2
A
Hi 'Pmenu'              FG(n4) BG(b2)
Hi 'PmenuSel'           FG(n5) BG(g3)
Hi 'PmenuSbar'          BG(b2)
Hi 'PmenuThumb'         BG(r4)
A
A " Identifier/Constant: {{{2
A
Hi 'Identifier'         FG(b5)
Hi 'Function'           FG(g3)
Hi 'Constant'           FG(r4)
Hi 'String'             FG(g4)
Hi 'Character'          FG(r4)
Hi 'Number'             FG(r4)
Hi 'Boolean'            FG(r4)
Hi 'Float'              FG(r4)
Hi 'Quote'              FG(g5)
A
A " Statement: {{{2
A
Hi 'Statement'          FG(g4) sNone
Hi 'Conditional'        FG(g3)
Hi 'Repeat'             FG(g3)
Hi 'Label'              FG(b3) sBold
Hi 'Keyword'            FG(y3)
Hi 'Exception'          FG(r3) sBold
Hi 'Operator'           FG(y3)
A
A " Preprocessor: {{{2
A
A if s:italic_preproc
Hi 'PreProc'            FG(b3) sItalic
Hi 'Include'            FG(b3) sItalic
Hi 'Define'             FG(b3) sItalic
Hi 'Macro'              FG(b3) sItalic
Hi 'PreCondit'          FG(b3) sItalic
A else
Hi 'PreProc'            FG(b3)
Hi 'Include'            FG(b3)
Hi 'Define'             FG(b3)
Hi 'Macro'              FG(b3)
Hi 'PreCondit'          FG(b3)
A endif
A
A " Type: {{{2
A
Hi 'Type'               FG(y4) sNone
Hi 'StorageClass'       FG(b4)
Hi 'Structure'          FG(b4)
Hi 'TypeDef'            FG(g4)
A
A " Comment: {{{2
A
A if s:italic_comment
Hi 'Comment'            FG(n3) sItalic
Hi 'SpecialComment'     FG(n4) sItalic
A else
Hi 'Comment'            FG(n3) sNone
Hi 'SpecialComment'     FG(n4) sNone
A endif
A
A " Special: {{{2
A
Hi 'Special'            FG(r4) sBold
Hi 'SpecialChar'        FG(y4)
Hi 'Tag'                FG(g4)
Hi 'Delimiter'          FG(g5)
Hi 'Debug'              FG(r5) sBold
Hi 'Underlined'         FG(b4) sUnderline
Hi 'Ignore'             FG(n3) BG(n1) sNone
Hi 'Error'              FG(r4) BG(n5) Style('bold,reverse')
Hi 'Todo'               FG(n5) bgNone sBold
A
A " Diff: {{{2
A
Hi 'DiffAdd'            fgNone BG(b2) sNone
Hi 'DiffChange'         fgNone BG(g2) sNone
Hi 'DiffDelete'         FG(r3) BG(r2) sNone
Hi 'DiffText'           fgNone BG(y2) sBold
A
A " Spelling: {{{2
A
A hi! link SpellBad cv01ErrorRange
A hi! link SpellCap cv01WarningRange
A hi! link SpellLocal cv01InfoRange
A hi! link SpellRare cv01HintRange
A
A " Terminal: {{{2
A
A if s:highlight_terminal
A | if has('nvim')
for [_idx, _color] in copy(gen_ansi_colors)->map({idx, c -> [idx, c[1]]})
  A |   let g:terminal_color_${_idx} = '${_color}'
endfor | unlet _idx _color
A | else
A |   let g:terminal_ansi_colors = [
for _color in copy(gen_ansi_colors)->map({_, c -> c[1]})
  A |   \ '${_color}',
endfor | unlet _color
A |   \]
A | endif
A endif
A
A " Custom Groups ---{{{1
A
for [_idx, _type] in map(['Bg', 'Dark', '', 'Hi'], { i, v -> [i + 2, v] })
  Hi 'cv01${_type}Green'   FG(g{_idx})
  Hi 'cv01${_type}Blue'    FG(b{_idx})
  Hi 'cv01${_type}Red'     FG(r{_idx})
  Hi 'cv01${_type}Yellow'  FG(y{_idx})
  Hi 'cv01${_type}Grey'    FG(n{_idx})
endfor | unlet _idx _type
A
Hi 'cv01Error'          FG(r5)
Hi 'cv01Warning'        FG(y5)
Hi 'cv01Info'           FG(b5)
Hi 'cv01Hint'           FG(n3)
A
Hi 'cv01ErrorSign'      FG(r5)
Hi 'cv01WarningSign'    FG(y5)
Hi 'cv01InfoSign'       FG(b5)
Hi 'cv01HintSign'       FG(n3)
A
Hi 'cv01ErrorRange'     sUndercurl SP(r5)
Hi 'cv01WarningRange'   sUndercurl SP(y5)
Hi 'cv01InfoRange'      sUndercurl SP(b5)
Hi 'cv01HintRange'      sUndercurl SP(n3)
A
Hi 'cv01DiffAddSign'            FG(g5)
Hi 'cv01DiffDeleteSign'         FG(r5)
Hi 'cv01DiffChangeSign'         FG(b5)
Hi 'cv01DiffChangeDeleteSign'   FG(y5)
A
A " Plugin Specific ---{{{1
A " ALE: {{{2
A
A hi! link ALEError cv01ErrorRange
A hi! link ALEWarning cv01WarningRange
A hi! link ALEInfo cv01InfoRange
A hi! link ALEErrorSign cv01ErrorSign
A hi! link ALEWarningSign cv01WarningSign
A hi! link ALEInfoSign cv01InfoSign
A
A " coc.nvim: {{{2
A
Hi 'CocSelectedText'        FG(r5) bgNone sBold
Hi 'CocSelectedLine'        fgNone BG(n2) sNone
Hi 'CocTreeSelected'        fgNone BG(n2) sNone
Hi 'CocCodeLens'            FG(n3)
Hi 'CocFadeout'             FG(n3)
Hi 'CocListMode'            FG(n2) BG(g4) sBold
Hi 'CocListPath'            FG(n5) BG(g2)
Hi 'CocMarkdownLink'        FG(b4) sUnderline
Hi 'CocOutlineIndentLine'   FG(n2)
Hi 'CocOutlineKind'         FG(g4)
Hi 'CocOutlineLine'         FG(b4)
A hi! link CocErrorFloat cv01Error
A hi! link CocWarningFloat cv01Warning
A hi! link CocInfoFloat cv01Info
A hi! link CocHintFloat cv01Hint
A hi! link CocDiagnosticsError cv01Error
A hi! link CocDiagnosticsWarning cv01Warning
A hi! link CocDiagnosticsInfo cv01Info
A hi! link CocDiagnosticsHint cv01Hint
A hi! link CocErrorHighlight cv01ErrorRange
A hi! link CocWarningHighlight cv01WarningRange
A hi! link CocInfoHighlight cv01InfoRange
A hi! link CocHintHighlight cv01HintRange
A hi! link CocErrorSign cv01ErrorSign
A hi! link CocWarningSign cv01WarningSign
A hi! link CocInfoSign cv01InfoSign
A hi! link CocHintSign cv01HintSign
A
A " EasyMotion: {{{2
A
Hi 'EasyMotionShadeDefault'     FG(n3) BG(n0)
Hi 'EasyMotionTarget'           FG(r5) BG(n0) sBold
Hi 'EasyMotionTarget2First'     FG(y5) BG(n0) sBold
Hi 'EasyMotionTarget2Second'    FG(y3) BG(n0) sBold
Hi 'EasyMotionIncSearch'        FG(n5) BG(g3) sBold
A
A " Fern: {{{2
A
A hi! link FernBranchSymbol Directory
A hi! link FernLeafSymbol Identifier
A
A " GitGutter: {{{2
A
A hi! link GitGutterAdd cv01DiffAddSign
A hi! link GitGutterDelete cv01DiffDeleteSign
A hi! link GitGutterChange cv01DiffChangeSign
A hi! link GitGutterChangeDelete cv01DiffChangeDeleteSign
A hi! link GitGutterAddLineNr cv01DiffAddSign
A hi! link GitGutterDeleteLineNr cv01DiffDeleteSign
A hi! link GitGutterChangeLineNr cv01DiffChangeSign
A hi! link GitGutterChangeDeleteLineNr cv01DiffChangeDeleteSign
A
A " Rainbow Parentheses: {{{2
A
A if !exists('g:rbpt_colorpairs')
A | let g:rbpt_colorpairs = [
A | \ ${b5}, ${r3}, ${g5}, ${y3},
A | \ ${b4}, ${r5}, ${g4}, ${y5},
A | \ ${b3}, ${r4}, ${g3}, ${y4},
A | \]
A | if !exists('g:rbpt_max')
A |   let g:rbpt_max = len(g:rbpt_colorpairs)
A | endif
A endif
A
A " Syntastic: {{{2
A
A hi! link SyntasticError cv01ErrorRange
A hi! link SyntasticWarning cv01WarningRange
A hi! link SyntasticErrorSign cv01ErrorSign
A hi! link SyntasticWarningSign cv01WarningSign
A
A " Filetype Specific ---{{{1
A " Css: {{{2
A
Hi 'cssImportant'       FG(y4)
Hi 'cv01CssBlueProp'    FG(b4)
Hi 'cv01CssYellowProp'  FG(y3)
Hi 'cv01CssGreenProp'   FG(g3)
A hi! link cssBraces Delimiter
A hi! link cssProp cv01CssBlueProp
A hi! link cssUIProp cv01CssYellowProp
A hi! link cssPositioningProp cv01CssYellowProp
A hi! link cssTextProp cv01CssGreenProp
A hi! link cssAnimationProp cv01CssGreenProp
A hi! link cssTransformProp cv01CssGreenProp
A hi! link cssTransitionProp cv01CssGreenProp
A hi! link cssPrintProp cv01CssGreenProp
A hi! link cssBoxProp cv01CssGreenProp
A hi! link cssFontDescriptorProp cv01CssGreenProp
A hi! link cssFlexibleBoxProp cv01CssGreenProp
A hi! link cssBorderOutlineProp cv01CssGreenProp
A hi! link cssBackgroundProp cv01CssGreenProp
A hi! link cssMarginProp cv01CssGreenProp
A hi! link cssListProp cv01CssGreenProp
A hi! link cssTableProp cv01CssGreenProp
A hi! link cssFontProp cv01CssGreenProp
A hi! link cssPaddingProp cv01CssGreenProp
A hi! link cssDimensionProp cv01CssGreenProp
A hi! link cssRenderProp cv01CssGreenProp
A hi! link cssColorProp cv01CssGreenProp
A hi! link cssGeneratedContentProp cv01CssGreenProp
A
A " Diff: {{{2
A
Hi 'diffAdded'          FG(g4)
Hi 'diffChanged'        FG(y4)
Hi 'diffRemoved'        FG(r4)
Hi 'diffFile'           FG(r4) sBold
Hi 'diffNewFile'        FG(y4) sBold
Hi 'diffIndexLine'      FG(b4) sBold
Hi 'diffLine'           FG(b4) sBold
A
A " Go: {{{2
A
A " hi! link goDeclType Identifier
A " hi! link goBuiltins Function
A
A " Html: {{{2
A
Hi 'htmlH1'                     FG(g5) sBold
Hi 'htmlH2'                     FG(g5) sBold
Hi 'htmlH3'                     FG(g4) sBold
Hi 'htmlH4'                     FG(g4) sBold
Hi 'htmlH5'                     FG(g4)
Hi 'htmlH6'                     FG(g4)
Hi 'htmlLink'                   FG(b4) sUnderline
Hi 'htmlBold'                   sBold
Hi 'htmlItalic'                 sItalic
Hi 'htmlUnderline'              sUnderline
Hi 'htmlBoldItalic'             Style('bold,italic')
Hi 'htmlBoldUnderline'          Style('bold,underline')
Hi 'htmlUnderlineItalic'        Style('underline,italic')
Hi 'htmlUnderlineBoldItalic'    Style('underline,bold,italic')
Hi 'htmlTag'                    FG(b4)
Hi 'htmlEndTag'                 FG(b4)
Hi 'htmlTagName'                FG(g3) sBold
Hi 'htmlArg'                    FG(g4) sBold
A
A " JavaScript: {{{2
A
A hi! link javaScriptBraces Delimiter
A hi! link javaScriptParens Delimiter
A hi! link javaScriptStatement StorageClass
A hi! link javaScriptOperator StorageClass
A hi! link javaScriptReserved Debug
A hi! link javaScriptNumber Number
A hi! link javaScriptIdentifier Number
A hi! link javaScriptMember Structure
A hi! link javaScriptGlobal Structure
A
A " https://github.com/pangloss/vim-javascript
Hi 'jsGlobalNodeObjects'        FG(r4) sBold
A hi! link jsBrackets Delimiter
A hi! link jsBraces Delimiter
A hi! link jsClassBraces jsBraces
A hi! link jsDestructuringBraces jsBraces
A hi! link jsFuncBraces jsBraces
A hi! link jsObjectBraces jsBraces
A hi! link jsRepeatBraces jsBraces
A hi! link jsTryCatchBraces jsBraces
A hi! link jsFinallyBraces jsBraces
A hi! link jsSwitchBraces jsBraces
A hi! link jsParens Delimiter
A hi! link jsFuncParens jsParens
A hi! link jsParensDecorator jsParens
A hi! link jsDecoratorFunction Special
A hi! link jsClassMethodType Special
A hi! link jsClassProperty Function
A hi! link jsObjectKey Label
A hi! link jsRegexpString SpecialChar
A hi! link jsStorageClass Statement
A hi! link jsReturn Special
A hi! link jsFunction Statement
A hi! link jsFuncArgs PreProc
A hi! link jsVariableDef PreProc
A hi! link jsExceptions Structure
A hi! link jsGlobalObjects Structure
A hi! link jsReturn StorageClass
A hi! link jsStatement StorageClass
A hi! link jsForAwait StorageClass
A hi! link jsAsyncKeyword StorageClass
A hi! link jsOperatorKeyword StorageClass
A
A " Json: {{{2
A
Hi 'jsonString'         FG(n4)
A
A " Markdown: {{{2
A
Hi 'markdownH1'                 FG(g5) sBold
Hi 'markdownH2'                 FG(g5) sBold
Hi 'markdownH3'                 FG(g4) sBold
Hi 'markdownH4'                 FG(g4) sBold
Hi 'markdownH5'                 FG(g4)
Hi 'markdownH6'                 FG(g4)
Hi 'markdownHeadingDelimiter'   FG(b3)
Hi 'markdownRule'               FG(b5)
Hi 'markdownIdDeclaration'      FG(b4) sBold
Hi 'markdownUrl'                FG(r4)
Hi 'markdownItalic'             sItalic
Hi 'markdownItalicDelimiter'    FG(b3)
Hi 'markdownBold'               sBold
Hi 'markdownBoldDelimiter'      FG(b3)
Hi 'markdownCode'               FG(g4)
Hi 'markdownCodeDelimiter'      FG(b3)
Hi 'markdownListMarker'         FG(y4) sBold
Hi 'markdownDelimiter'          FG(n3)
A hi! link markdownCodeBlock markdownCode
A hi! link markdownUrlTitleDelimiter markdownDelimiter
A
A " http://plasticboy.com/markdown-vim-mode/
A hi! link mkdDelimiter markdownDelimiter
A hi! link mkdHeading markdownHeadingDelimiter
A hi! link mkdRule markdownRule
A hi! link mkdURL markdownUrl
A hi! link mkdItalic markdownItalicDelimiter
A hi! link mkdBold markdownBoldDelimiter
A hi! link mkdCode markdownCode
A hi! link mkdCodeDelimiter markdownCodeDelimiter
A hi! link mkdID markdownIdDeclaration
A hi! link mkdListItem markdownListMarker
A
A " Python: {{{2
A
Hi 'pythonDocTest'      FG(y4)
A hi! link pythonBuiltin Identifier
A hi! link pythonBuiltinObj Identifier
A hi! link pythonBuiltinFunc Identifier
A hi! link pythonDecorator Special
A hi! link pythonDecoratorName Special
A hi! link pythonDottedName Special
A hi! link pythonQuotes Quote
A
A " TypeScript: {{{2
A
" Hi 'typescriptNodeGlobal'       FG(r4) sBold
" A hi! link typescriptForOperator Keyword
A hi! link typescriptExport Include
A hi! link typescriptImport Include
A hi! link typescriptImportType Include
A hi! link typescriptBraces Delimiter
A hi! link typescriptParens Delimiter
A hi! link typescriptTypeBrackets StorageClass
A hi! link typescriptTypeBracket StorageClass
" A hi! link typescriptMember Label
" A hi! link typescriptIdentifier Special
" A hi! link typescriptMethodAccessor Special
" A hi! link typescriptStatementKeyword StorageClass
A hi! link typescriptExceptions Exception
A hi! link typescriptTry Exception
A hi! link typescriptDebugger Debug
A hi! link typescriptTemplateSB SpecialChar
" A hi! link typescriptRegexpString SpecialChar
A hi! link typescriptVariable StorageClass
A hi! link typescriptCall StorageClass
" A hi! link typescriptVariableDeclaration PreProc
" A hi! link typescriptIdentifierName PreProc
" A hi! link typescriptOperator StorageClass
" A hi! link typescriptAsyncFuncKeyword StorageClass
A hi! link typescriptFuncKeyword Structure
A hi! link typescriptClassKeyword Structure
A
A " Vim: {{{2
A
Hi 'vimCommentTitle'    FG(n3) sBold
Hi 'vimNotation'        FG(y3) sBold
Hi 'vimMapModKey'       FG(y3) sBold
Hi 'vimContinue'        FG(r3)
Hi 'vimFuncSID'         FG(b3) sBold
Hi 'vimFunction'        FG(g3)
Hi 'vimUserFunc'        FG(g3)
Hi 'vimSetSep'          FG(n3)
A
A " Xml: {{{2
A
Hi 'xmlTag'             FG(b4)
Hi 'xmlEndTag'          FG(b4)
Hi 'xmlTagName'         FG(g3) sBold
Hi 'xmlAttrib'          FG(g4) sBold
A hi! link xmlCdataStart Comment
A hi! link xmlCdataEnd Comment
A
" }}}1

EndFile
